sudo: false
language: python
os: linux
dist: xenial
python:
    - "3.7"
    - "3.8"
env:
    - TESTOPTIONS="--blocking"
    - TESTOPTIONS="--non-blocking"
    - TESTOPTIONS="--backend=pygraphblas"

install:
    # https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/use-conda-with-travis-ci.html
    - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    - bash miniconda.sh -b -p $HOME/miniconda
    - source "$HOME/miniconda/etc/profile.d/conda.sh"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    - conda info -a
    # create and activate environment
    - conda create -n grblas -c conda-forge python=$TRAVIS_PYTHON_VERSION pandas numba cffi graphblas pytest-runner coverage scipy networkx
    - conda activate grblas
    - python setup.py build_ext -I $CONDA_PREFIX/include -L $CONDA_PREFIX/lib
    - python setup.py develop
    - if [[ $TESTOPTIONS == *pygraphblas* ]] ; then conda install -c conda-forge pygraphblas ; fi

script:
    - coverage run --branch -m pytest --runslow $TESTOPTIONS
    # Test (and cover) automatic initialization
    - coverage run -a --branch grblas/tests/test_auto_init.py
    # Make sure all top-level imports work
    - ( for attr in Matrix Scalar Vector backends base binary descriptor dtypes exceptions expr ffi formatting init io lib mask matrix monoid ops scalar semiring tests unary vector ; do echo python -c \"from grblas import $attr\" ; if ! python -c "from grblas import $attr" ; then exit 1 ; fi ; done )
    # Make sure notebooks execute
    - conda install -c conda-forge matplotlib nbconvert jupyter flake8 black
    - jupyter nbconvert --to notebook --execute notebooks/*ipynb
    # Style checks
    - flake8 grblas *.py
    - black grblas *.py --check --diff

after_success:
    - coverage report --show-missing
    - conda install -c conda-forge coveralls
    - coveralls

notifications:
    email: false
