name: Build and Test

on:
  # Run this workflow every time a PR is opened or a new commit is pushed to the PR
  pull_request:
  # Run this workflow every time a PR is merged to main
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pyver: [3.7, 3.8, 3.9]
        testopts:
          - "--blocking --record"
          - "--non-blocking --record --runslow"
          # - "--backend=pygraphblas"  # Skip for now
        sourcetype:
          - "wheel"
          - "source"  # Is this still broken?
          - "upstream"
        exclude:
          - sourcetype: "upstream"
            testopts: "--non-blocking --record --runslow"
          - sourcetype: "upstream"
            testopts: "--backend=pygraphblas"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda create -n grblas -c conda-forge python=${{ matrix.pyver }} pytest-runner coverage 'black>=20.8b1' flake8 coveralls
      - name: Style Checks
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          flake8 grblas *.py
          black grblas *.py --check --diff
      - name: Build extension module
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          conda install -c conda-forge pandas numba scipy networkx cffi
          if [[ ${{ matrix.sourcetype }} == "wheel" ]]; then
              pip install suitesparse-graphblas
          else
              conda install -c conda-forge graphblas=5.0.3
          fi
          if [[ ${{ matrix.sourcetype }} == "source" ]]; then pip install --no-binary=all suitesparse-graphblas ; fi
          # I can't get pip install from git to work, so git clone instead.
          # pip install git+https://github.com/GraphBLAS/python-suitesparse-graphblas.git@main#egg=suitesparse-graphblas
          if [[ ${{ matrix.sourcetype }} == "upstream" ]]; then
              conda install -c conda-forge cython
              git clone --depth=1 https://github.com/GraphBLAS/python-suitesparse-graphblas.git ssgb
              pushd ssgb
              python setup.py install
              popd
          fi
          python setup.py build_ext -I $CONDA_PREFIX/include -L $CONDA_PREFIX/lib
          python setup.py develop
      - name: Optional pygraphblas
        if: contains(matrix.testopts, 'pygraphblas') && (matrix.pyver != 3.9)
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          conda install -c conda-forge pygraphblas
      - name: Verify build
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          # Make sure `from grblas import *` works as expected
          python -c "from grblas import * ; Matrix"
          # Make sure all top-level imports work
          ( for attr in Matrix Scalar Vector Recorder backends base binary descriptor dtypes exceptions expr ffi formatting init io lib mask matrix monoid op operator scalar semiring tests unary vector recorder _ss ss ; do echo python -c \"from grblas import $attr\" ; if ! python -c "from grblas import $attr" ; then exit 1 ; fi ; done )
      - name: Unit tests
        if: (! contains(matrix.testopts, 'pygraphblas')) || (matrix.pyver != 3.9)
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          coverage run --branch -m pytest ${{ matrix.testopts }}
          # Test (and cover) automatic initialization
          coverage run -a --branch grblas/tests/test_auto_init.py
          coverage run -a --branch grblas/tests/test_external_init.py
      - name: Coverage
        if: (! contains(matrix.testopts, 'pygraphblas')) || (matrix.pyver != 3.9)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.pyver}}/${{ matrix.testopts }}
          COVERALLS_PARALLEL: true
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          coverage report --show-missing
          coveralls --service=github
      - name: Notebooks Execution check
        if: (! contains(matrix.testopts, 'pygraphblas')) || (matrix.pyver != 3.9)
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate grblas
          conda install -c conda-forge matplotlib nbconvert jupyter 'ipython>=7'
          jupyter nbconvert --to notebook --execute notebooks/*ipynb

  finish:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda create -n coveralls_final -c conda-forge python=3.8 coveralls
      - name: Coveralls Finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate coveralls_final
          coveralls --finish
